---
title: PKtutorial
author: Hechuan Wang
date: April 27th, 2019
---

```julia
using Pumas, LinearAlgebra, Plots, CSV, Queryverse
using Pkg
Pkg.build("GR")

```


In this tutorial, we will cover the fundamentals of setting up a 1-compartment
model with zero-order absorption for PuMaS simulation. Here we use Intramuscular Quinine
population PK model reported by Hendriksen et al. as an example in Tanzanian children with a median body weight of 11kg and a median age of 2.4 yrs.

## The model

Details of the model specification are provided.
There are between-subject variability on all the parameters.


```julia
model = @model begin
  @param begin
    θ ∈ VectorDomain(3)
    Ω ∈ PSDDomain(3)
    σ_prop ∈ RealDomain(init=0.1)
  end

  @random begin
    η ~ MvNormal(Ω)
  end

  @covariates Wt

  @pre begin
    CL = θ[1]*(Wt/11)^0.75*exp(η[1])
    V  = θ[2]*(Wt/11)*exp(η[2])
    duration = [0, θ[3]]
    #K0 = θ[3]*exp(η[3])
  end

  @dynamics begin
    #Depot'   = -K0
    Central' =  - Central*CL/V
  end

  @vars begin
    conc = Central/V
  end

  @derived begin
    dv ~ @.Normal(conc,sqrt(conc^2*σ_prop + eps()))
  end

end

```

## Setting up parameters

Next we provide the initial estimates of the parameters to simulate from.
The fixed effects are provided in the θ vector (CL, V, Duration for the central compartment) and the between-subject variability
parameteres are provided in the Ω vector as variances. So, 0.0176 variance on
Ω_11 suggests a 13% coefficient of variation. Similarly, σ_prop has a 30.7%
proportional residual error.

```julia
p = (
  θ = [0.792, 13.7, 1.42],
  Ω = PDMat(diagm(0 => [0.0163,0.0309])),
  σ_prop = 0
  )
```

## Single dose regimen

`DosageRegimen()` is the function that lets you construct a dosing regimen.
The first argument of the `DosageRegimen` is `amt` and is not a named argument.
All subsequent arguments need to be named. In this dosing regimen,
a single dose of 10 mg/kg Quinine (median weight 11kg) is administered at `time=0`.

```julia
ev = DosageRegimen(110, time=0) ## mg
first(ev.data)
```

## Building one subject

A child weighing 11 kg is administered above dosing regimen.
His concentration-time profile will be simulated.


```julia
s1 = Subject(id=1,evs=ev,cvs=(Wt=11,))

```

You can use `s1.events` to check the dosing regimen and `s1.covariates` to check the model covariates.

s1.events
s1.covariates

## Simulate one subject

Using this one subject, `s1`, we can simulate a simple concentration time
profile using the model above and plot the concentration-time profile for 24 hours.

```julia
#randeffs = (η = zeros(3),)

obs = simobs(model, s1, p, obstimes=0:0.1:24, randeffs)

#obs = DataFrame(obs)

plot(obs)#, yscale=:log, ylims=(0.001,Inf))

```
