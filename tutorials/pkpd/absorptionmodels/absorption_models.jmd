---
title: Absorption models
author: Hechuan Wang & Vijay Ivaturi
date: August 10, 2019
---

```julia
using Pumas, LinearAlgebra, Plots
```

# Introduction

In this tutorial, we will cover the following absorption models

* first order
* zero-order
* two parallel first-order
* first-order + zero-order simultaneously
* Erlang absorption
* transit absorption
* Weibull absorption

Let's start by setting up a population of subjects to work with that receive a single dose regimen

## Generating the population

```julia
sd = DosageRegimen(100, time=0)
choose_covariates() = (Wt = rand(55:80),dose=100)
sd_with_covariates = Population(map(i -> Subject(id=i,evs=sd,cvs=choose_covariates()),1:10))
```
For a more indepth tutorial, please see the tutorial on [generating and simulation populations](https://tutorials.pumas.ai/html/introduction/simulating_populations.html)

For simplicity, we will use a 1-compartment distribution system with additional absorption compartment(s) as required.
Note that we are not simulating with residual error in these examples, but that can be easily added


## first-order absorption

```julia
foabs = @model begin

  @param begin
    θ ∈ VectorDomain(3)
    Ω ∈ PDiagDomain(3)
  end

  @random begin
    η ~ MvNormal(Ω)
  end

  @covariates Wt

  @pre begin
    CL = θ[1]*(Wt/70)^0.75*exp(η[1])
    V  = θ[2]*(Wt/70)*exp(η[2])
    Ka = θ[3]*exp(η[3])
  end

  @dynamics begin
    Depot'   = -Ka*Depot
    Central' =  Ka*Depot - Central*CL/V
  end

  @derived begin
    conc = Central/V
  end

end

```
and below are the set of parameters for this model

```julia
param = (
  θ = [5,20,1],
  Ω =Diagonal([0.04,0.04,0.04]),
  )
```

We can now use the data and model with parameters to simulate a first-order absorption profile

```julia
obs = simobs(foabs, sd_with_covariates, param, obstimes=0:1:48)
foplot = plot(obs, title =  "First-order absorption")
```

## zero-order absorption

```julia
zoabs = @model begin
  @param begin
    θ ∈ VectorDomain(3)
    Ω ∈ PDiagDomain(3)
  end

  @random begin
    η ~ MvNormal(Ω)
  end

  @covariates Wt

  @pre begin
    CL = θ[1]*(Wt/11)^0.75*exp(η[1])
    V  = θ[2]*(Wt/11)*exp(η[2])
    duration =  (Central = θ[3],)
  end

  @dynamics begin
    Central' =  - Central*CL/V
  end

  @derived begin
    conc = Central/V
  end

end
```

and below are the set of parameters for this model

```julia
param = (
  θ = [0.792, 13.7, 5],
  Ω =Diagonal([0.04,0.04,0.04]),
  )
```
Notes:

1. Notice in the model above that there is no additional "absorption" compartment. We are
directly dosing into the central compartment as an infusion.This is a common trick used to model
zero-order absorption profiles
2. Since we are deling with infusion, we have to set the `rate` data item in `DosageRegimen` to be `< 0`
We can now use the data and model with parameters to simulate a zero-order absorption profile

```julia
sd = DosageRegimen(100, time=0, rate=-2)
choose_covariates() = (Wt = rand(55:80),dose=100)
sd_with_covariates = Population(map(i -> Subject(id=i,evs=sd,cvs=choose_covariates()),1:10))
```

```julia
obs = simobs(zoabs, sd_with_covariates, param, obstimes=0:0.1:48)
zoplot = plot(obs, title =  "Zero-order absorption")
```

## mixed zero+first order absorption models

```julia

fozoabs = @model begin

  @param begin
    θ ∈ VectorDomain(6)
    Ω ∈ PDiagDomain(2)
  end

  @random begin
    η ~ MvNormal(Ω)
  end

  @covariates Wt

  @pre begin
    CL = θ[1]*(Wt/70)^0.75*exp(η[1])
    V  = θ[2]*(Wt/70)*exp(η[2])
    Ka = θ[3]
    duration = (Central =θ[4],)
    bioav = (Depot = θ[5], Central = 1-θ[5])
    lags = (Depot =θ[6],)
  end

  @dynamics begin
    Depot'   = -Ka*Depot
    Central' =  Ka*Depot - Central*CL/V
  end

  @derived begin
    conc = Central/V
  end

end
```

and below are the set of parameters for this model

```julia
param = (
  θ = [5, 50, 1.2, 2, 0.5, 2],
  Ω = Diagonal([0.04, 0.04]),
  )
```
Notes:

1. In the mixed order case, each subject will have two rows for dosing, the first-order one into the depot compartment
and the zero-order one into the central compartment.
2. Hence we see two specifications of dosing in using `DosageRegimen` below.
3. `DosageRegimen` can also combine multiple `DosageRegimen`'s together, in this case, first and zero order
4. In this example, zero-order dosing occurs first over a 2 hour duration and the first hour process starts
after a lag of 2 hours.

We can now use the data and model with parameters to simulate a simultaneous first- and zero-order absorption profile

```julia
sd_fo = DosageRegimen(100, time=0, cmt=1, rate = 0, evid=1)
sd_zo = DosageRegimen(100, time=0, cmt=2, rate = -2, evid=1)
sd_fo_zo = DosageRegimen(sd_fo,sd_zo)

choose_covariates() = (Wt = rand(55:80),dose=100)
sd_with_covariates = Population(map(i -> Subject(id=i,evs=sd_fo_zo,cvs=choose_covariates()),1:10))
```

```julia
obs = simobs(fozoabs, sd_with_covariates, param, obstimes=0:0.1:24, parallel_type=Pumas.Serial)
fozoplot = plot(obs, title = "mixed zero+first order absorption")
```

## Two parallel first-order absorptions


```julia
two_parallel_foabs = @model begin

  @param begin
    θ ∈ VectorDomain(6)
    Ω ∈ PDiagDomain(6)
  end

  @random begin
    η ~ MvNormal(Ω)
  end

  @covariates Wt

  @pre begin
    CL = θ[1]*(Wt/70)^0.75*exp(η[1])
    V  = θ[2]*(Wt/70)*exp(η[2])
    Ka1 = θ[3]*exp(η[3])
    Ka2 = θ[4]*exp(η[4])
    lags = (SR = θ[5]*exp(η[5]),)
    bioav = (IR = θ[6]*exp(η[6]), SR = 1-θ[6]*exp(η[6]))
  end

  @dynamics begin
    IR'   = -Ka1*IR
    SR'   = -Ka2*SR
    Central' =  Ka1*IR + Ka2*SR - Central*CL/V
  end

  @derived begin
    conc = Central/V
  end

end

```
and below are the set of parameters for this model

```julia
param = (
  θ = [5,50,0.8,0.6,5,0.5],
  Ω =Diagonal([0.04,0.04,0.36,0.36,0.04,0.04]),
  )
```

We can now use the data and model with parameters to simulate a first-order absorption profile

```julia
fo_1 = DosageRegimen(100,cmt=1,time=0)
fo_2 = DosageRegimen(100,cmt=2,time=0)
parallel_fo = DosageRegimen(fo_1,fo_2)
parallel_fo_with_covariates = Population(map(i -> Subject(id=i,evs=parallel_fo,cvs=choose_covariates()),1:10))
obs = simobs(two_parallel_foabs, parallel_fo_with_covariates, param, obstimes=0:1:48)
parallel_fo_plot = plot(obs, title =  "Two Parallel First-order absorption")
```

## Weibull-Type Absorption

```julia
wb_abs = @model begin

  @param begin
    θ ∈ VectorDomain(4)
    Ω ∈ PDiagDomain(4)
  end

  @random begin
    η ~ MvNormal(Ω)
  end

  @covariates Wt

  @pre begin
    CL = θ[1]*(Wt/70)^0.75*exp(η[1])
    V  = θ[2]*(Wt/70)*exp(η[2])
    Ka1 = θ[3]*exp(η[3])
    Gama1 = θ[4]*exp(η[4])
    # Weibull function
    wb = t -> 1-exp((-(Ka1*t)^Gama1))
  end

  @dynamics begin
    Depot'   = -wb(t)*Depot
    Central' =  wb(t)*Depot - Central*CL/V
  end

  @derived begin
    conc = Central/V
  end

end

```
and below are the set of parameters for this model

```julia
param = (
  θ = [5,50,0.4,4],
  Ω =Diagonal([0.04,0.04,0.36,0.04]),
  )
```

We can now use the data and model with parameters to simulate a weibull absorption profile

```julia
wb_reg = DosageRegimen(100,cmt=1,time=0)
wb_reg_with_covariates = Population(map(i -> Subject(id=i,evs=wb_reg,cvs=choose_covariates()),1:10))
obs = simobs(wb_abs,wb_reg_with_covariates, param, obstimes=0:1:48)
wb_plot = plot(obs, title =  "Weibull absorption")
```
