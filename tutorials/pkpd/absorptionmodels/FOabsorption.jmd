---
title: PKtutorial
author: Hechuan Wang
date: April 15th, 2019
---

```julia
using PuMaS, LinearAlgebra, Plots, CSV
using Pkg
Pkg.build("GR")

```


In this tutorial, we will cover the fundamentals of setting up a 1-compartment
model with first-order absorption for PuMaS simulation. Here we use Lenalidomide
population PK model reported by Connarn et al. as an example.

## The model

Details of the model specification are provided.
There are between-subject variability on all the parameters.


```julia
model = @model begin

  @param begin
    θ ∈ VectorDomain(3)
    Ω ∈ PSDDomain(3)
    σ_prop ∈ RealDomain(init=0.00001)
  end

  @random begin
    η ~ MvNormal(Ω)
  end

  @covariates Wt

  @pre begin
    CL = θ[1]*(Wt/70)^0.75*exp(η[1])
    V  = θ[2]*(Wt/70)*exp(η[2])
    Ka = θ[3]*exp(η[3])
    lags = [0.246,0] # hrs
  end

  @dynamics begin
    Depot'   = -Ka*Depot
    Central' =  Ka*Depot - Central*CL/V
  end

  @vars begin
    conc = Central/V
  end

  @derived begin
    dv ~ @.Normal(conc,sqrt(conc^2*σ_prop + eps()))
  end

end

```

## Setting up parameters

Next we provide the initial estimates of the parameters to simulate from.
The fixed effects are provided in the θ vector (CL, V, Ka) and the between-subject variability
parameteres are provided in the Ω vector as variances. So, 0.0176 variance on
Ω_11 suggests a 13% coefficient of variation. Similarly, σ_prop has a 49%
proportional residual error.

```julia
p = (
  θ = [18, 79, 8.34],
  Ω = PDMat(diagm(0 => [0.0176,0.0299,2.13])),
  σ_prop = 0.49
  )
```

## Single dose regimen

`DosageRegimen()` is the function that lets you construct a dosing regimen.
The first argument of the `DosageRegimen` is `amt` and is not a named argument.
All subsequent arguments need to be named. In this dosing regimen,
a single dose of 25 mg lenalidomide is administered at `time=0`.

```julia
ev = DosageRegimen(25, time=0) ## mg
first(ev.data)
```

## Building one subject

A subject weighing 70 kg is administered above dosing regimen.
His concentration-time profile will be simulated.


```julia
s1 = Subject(id=1,evs=ev,cvs=(Wt=70))

```

You can use `s1.events` to check the dosing regimen and `s1.covariates` to check the model covariates.

s1.events
s1.covariates

## Simulate one subject

Using this one subject, `s1`, we can simulate a simple concentration time
profile using the model above and plot the concentration-time profile for 24 hours.

```julia
randeffs = (η = zeros(3),)

obs = simobs(model, s1, p, obstimes=0:0.1:24, randeffs)

#obs = DataFrame(obs)

plot(obs.times, obs[:conc])

```
